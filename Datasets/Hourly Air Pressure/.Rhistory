randu
View(randu)
irisDATA <- iris
View(irisDATA)
irisDATA[,-5]
irisDATA
irisDATA[,-5] <- scale(iris[,-5])
irisDATA[,-5]
set.seed(345)
irisData <- iris
irisData[,-5] <- scale(iris[,-5])
set.seed(345)
index <- sample(1:nrow(irisData), nrow(irisData) * .70, replace = FALSE)
index
View(irisData)
length(index)
150 * .70
training <- irisData[index, ]
View(training)
test <- irisData[-index, ]
test
View(test)
length(test)
library("class")
library("caret")
install.packages(caret)
install.packages("caret")
library("class")
library("caret")
library(caret)
install.packages("ggplot2")
library(caret)
install.packages("Rcpp")
library(caret)
kNNPred1 <- knn(training[,-5], training$Species, k =1, prob = T)
kNNPred1 <- knn(training[,-5], training$Species, k=1, prob=T)
kNNPred1 <- knn(training[,-5],test[,-5], training$Species, k=1, prob=T)
kNNPred1
kNNPred1
View(kNNPred1)
sum(kNNPred1 == test$Species)/length(test$Species) * 100
kNNPred1 <- knn(training[,-5],test[,-5], training$Species, k=2, prob=T)
kNNPred1 <- knn(training[,-5],test[,-5], training$Species, k=1, prob=T)
sum(kNNPred1 == test$Species)/length(test$Species) * 100
kNNPred2 <- knn(training[,-5],test[,-5], training$Species, k=2, prob=T)
table(test$Species,kNNPred2)
sum(kNNPred1 == test$Species)/length(test$Species) * 100
sum(kNNPred2 == test$Species)/length(test$Species) * 100
kNNPred3 <- knn(training[,-5], test[,-5],training$Species, k=3, prob = T)
kNNPred3
table(test$Species, kNNPred3)
sum(kNNPred3 == test$Species)/ length(test$Species) *100
confusionMatrix(kNNPred3,test$Species)
install.packages("e1071")
library(e1071)
kNNPrediction <- list()
accuracy <- numeric()
kNNTestPrediction <- list()
for (k in 1:100) {
kNNTestPrediction[[k]] <- knn(training[,-5], test[,-5],training$Species,k,prob = TRUE)
accuracy[k] <- sum(kNNTestPrediction[k] == test$Species)/length(test$Species)*100
}
plot(accuracy, type="b", col="blue", cex=1, pch=20,
xlab="Number of neighbours (k)", ylab="Classification Accuracy (%)",
main="Accuracy vs k")
library('gmp')
library(rvest)
library(xml2)
library(tidyr)
library(purrr)
library(readr)
URLs <- c("https://en.wikipedia.org/wiki/List_of_states_and_union_territories_of_India_by_crime_rate")
Webpage <- read_html(URLs)
Honda_CarName_Html <- html_nodes(Webpage,'.jquery-tablesorter td')
Honda_Car_Name <- html_text(Honda_CarName_Html)
#typeof(Honda_Car_Name)
#Removed Honda Name from each cell
#gsub('Honda ',"",Honda_Car_Name)
library('gmp')
library(rvest)
library(xml2)
library(tidyr)
library(purrr)
library(readr)
install.packages('gmp')
install.packages('rvest')
install.packages('tidyr')
install.packages('xml2')
library('gmp')
library(rvest)
library(xml2)
library(tidyr)
library(purrr)
library(readr)
URLs <- c("https://en.wikipedia.org/wiki/List_of_states_and_union_territories_of_India_by_crime_rate")
Webpage <- read_html(URLs)
Honda_CarName_Html <- html_nodes(Webpage,'.jquery-tablesorter td')
Honda_Car_Name <- html_text(Honda_CarName_Html)
#typeof(Honda_Car_Name)
#Removed Honda Name from each cell
#gsub('Honda ',"",Honda_Car_Name)
install.packages('XML')
URLs <- c("https://en.wikipedia.org/wiki/List_of_states_and_union_territories_of_India_by_crime_rate")
Webpage <- read_html(URLs)
Honda_CarName_Html <- html_nodes(Webpage,'.jquery-tablesorter td')
Honda_Car_Name <- html_text(Honda_CarName_Html)
#typeof(Honda_Car_Name)
#Removed Honda Name from each cell
#gsub('Honda ',"",Honda_Car_Name)
Honda_Car_Name
Honda_CarName_Html
Webpage
View(Webpage)
library(rvest)
library(purrr)
library('gmp')
library(xml2)
library(tidyr)
library(readr)
install.packages('readr')
library(readxl)
library(readr)
library(rvest)
library(purrr)
library('gmp')
library(xml2)
library(tidyr)
library(readr)
library(readxl)
library(stringi)
library(Hmisc)
installed.packages("readxl")
library(readxl)
install.packages('readxl')
Path <- "C:\\Users\\Vaibhav\\Desktop\\CRM Datasets\\Insurance Dataset final.csv"
Insuarance_Data <- read.csv(Path)
dim(Insuarance_Data)
names(Insuarance_Data)
head(Insuarance_Data, n = 1)
Del_Rows <- c(3,4,6,7,9,10,12,14,15,,16,17,18,19,21,22,24,25,26,27,29,30,31,32,37,38,39)
Del_Rows <- c(3,4,6,7,9,10,12,14,15,16,17,18,19,21,22,24,25,26,27,29,30,31,32,37,38,39)
Del_Rows <- c(3,4,6,7,9,10,12,14,15,16,17,18,19,21,22,24,25,26,27,29,30,31,32,37,38,39)
for (var in Del_Rows) {
Insuarance_Data <- Insuarance_Data[,-var]
}
names(Insuarance_Data)
length(Del_Rows)
Path <- "C:\\Users\\Vaibhav\\Desktop\\CRM Datasets\\Insurance Dataset final.csv"
Insuarance_Data <- read.csv(Path)
dim(Insuarance_Data)
Del_Rows <- c(3,4,6,7,9,10,12,14,15,16,17,18,19,21,22,24,25,26,27,29,30,31,32,37,38,39)
for (var in Del_Rows) {
Insuarance_Data[,-var]
}
length(Insuarance_Data)
Del_Rows <- c(3,4,6,7,9,10,12,14,15,16,17,18,19,21,22,24,25,26,27,29,30,31,32,37,38,39)
for (var in Del_Rows) {
Insuarance_Data <- Insuarance_Data[,-var]
}
length(Insuarance_Data)
39 - 23
length(Del_Rows)
39 - 26
Path <- "C:\\Users\\Vaibhav\\Desktop\\CRM Datasets\\Insurance Dataset final.csv"
Insuarance_Data <- read.csv(Path)
dim(Insuarance_Data)
Insuarance_Data <- Insuarance_Data[,-Del_Rows]
dim(Insuarance_Data)
names(Insuarance_Data)
set.seed(1000)
view(Insuarance_Data)
View(Insuarance_Data)
Path <- "C:\\Users\\Vaibhav\\Desktop\\CRM Datasets\\Insurance Dataset final.csv"
Insuarance_Data <- read.csv(Path)
#names(Insuarance_Data)
#head(Insuarance_Data, n = 1)
dim(Insuarance_Data)
names(Insuarance_Data)
Del_Rows <- c(3,4,6,7,9,10,12,14,15,16,17,18,19,21,22,24,25,26,27,29,30,31,32,37)
Insuarance_Data <- Insuarance_Data[,-Del_Rows]
names(Insuarance_Data)
na.omit(Insuarance_Data)
Insuarance_Data <- na.omit(Insuarance_Data)
dim(Insuarance_Data)
View(Insuarance_Data)
Insuarance_Data2 <- Insuarance_Data[!(Insuarance_Data$collision_type == "?")]
a <- c("?")
Insuarance_Data$collision_type <- gsub(paste0(a,collapse = "|"), "",Insuarance_Data$collision_type)
View(Insuarance_Data)
Insuarance_Data[!grepl(pattern = "[?]", x = Insuarance_Data$collision_type)]
Insuarance_Data[!grepl(pattern = "[?]", x = Insuarance_Data)]
dim(Insuarance_Data)
Insuarance_Data2 <- Insuarance_Data[!grepl(pattern = "[?]", x = Insuarance_Data)]
dim(Insuarance_Data2)
a <- Insuarance_Data[!grepl("?", Insuarance_Data)]
View(a)
Insuarance_Data[!grepl(pattern = "[?]", x = Insuarance_Data)]
a <- Insuarance_Data[!grepl(pattern = "[?]", x = Insuarance_Data)]
View(a)
setwd("C:\\Users\\Vaibhav\\Downloads\\DWBI\\ADM CA2 Data\\Files to merge")
Temperature <- read.csv("Temperature Data.xlsx")
Temperature <- read.csv("Temperature Data.xlsx")
Temperature <- read.csv("Temperature Data.csv")
setwd("C:\\Users\\Vaibhav\\Desktop\\ADM CA2 Data New")
Temperature <- read.csv("Temperature Data.csv")
Temperature
install.packages('reshape')
library('reshape')
df = transform(Temperature, Temperature$Date.Value.Anomaly = colsplit(Temperature$Date.Value.Anomaly = "\\,", names=c('Date', 'temp', 'Ananimous')))
df <- transform(Temperature, Temperature$Date.Value.Anomaly = colsplit(Temperature$Date.Value.Anomaly = "\\,", names=c('Date', 'temp', 'Ananimous')))
df <- transform(Temperature, Temperature$Date.Value.Anomaly <- colsplit(Temperature$Date.Value.Anomaly = "\\,", names=c('Date', 'temp', 'Ananimous')))
library('tidyr')
separate(data = Temperature, col = Date.Value.Anomaly, into = c("left", "right","midle"), sep = "\\,")
Temperature <- separate(data = Temperature, col = Date.Value.Anomaly, into = c("Date", "Temperature","DewPoint"), sep = "\\,")
Temperature
separate(Temperature, Date, c("year","month"))
Temperature$Date <- as.Date(Temperature$Date)
extract(Temperature, Date, into = c("Year", "Month"), "(.{4})(.{2})", remove=FALSE)
Temperature <- extract(Temperature, Date, into = c("Year", "Month"), "(.{4})(.{2})", remove=FALSE)
Temperature
Temperature[,-c(1,5)]
((Temperature$Temperature - 32) * (5 / 9)) + 273.15
typeof(Temperature$Temperature)
Temperature$Temperature <- as.numeric(Temperature$Temperature)
((Temperature$Temperature - 32) * (5 / 9)) + 273.15
Temperature$Temperature  <-  ((Temperature$Temperature - 32) * (5 / 9)) + 273.15
head(Temperature)
setwd("C:\\Users\\Vaibhav\\Desktop\\ADM CA2 Data New")
Temperature <- read.csv("Temperature Data.csv")
Temperature <- separate(data = Temperature, col = Date.Value.Anomaly, into = c("Date", "Temperature","DewPoint"), sep = "\\,")
Temperature <- extract(Temperature, Date, into = c("Year", "Month"), "(.{4})(.{2})", remove=FALSE)
str(Temperature)
Temperature <- Temperature[,-c(1,5)]
Temperature <- Temperature[,-c(1,5)]
Temperature <- read.csv("Temperature Data.csv")
Temperature <- separate(data = Temperature, col = Date.Value.Anomaly, into = c("Date", "Temperature","DewPoint"), sep = "\\,")
Temperature <- extract(Temperature, Date, into = c("Year", "Month"), "(.{4})(.{2})", remove=FALSE)
str(Temperature)
Temperature <- Temperature[,-c(1,5)]
str(Temperature)
Temperature$Temperature <- as.numeric(Temperature$Temperature)
str(Temperature)
Temperature$Temperature <- as.numeric(Temperature$Temperature)
Temperature$Temperature  <-  ((Temperature$Temperature - 32) * (5 / 9)) + 273.15
head(Temperature)
setwd("C:\\Users\\Vaibhav\\Desktop\\ADM CA2 Data New\\Hourly Air Pressure")
AirPressure <- files %>% map_df(read.csv)
library(purrr)
library(data.table)
setwd("C:\\Users\\Vaibhav\\Desktop\\ADM CA2 Data New\\Hourly Air Pressure")
AirPressure <- files %>% map_df(read.csv)
files <- list.files(pattern="*.csv")
AirPressure <- files %>% map_df(read.csv)
str(AirPressure)
files <- list.files(pattern="*.csv")
AirPressure <- files %>% map_df(read.csv)
str(AirPressure)
head(AirPressure)
AirPressure
head(AirPressure)
AirPressure <- extract(AirPressure, DATE, into = c("Year", "Month","Date"), "(.{4})(.{2})(.{2})", remove=FALSE)
head(AirPressure)
AirPressure <- extract(AirPressure, DATE, into = c("Year", "Month","Date"), "(.{4})( .{2})(.{2})", remove=FALSE)
head(AirPressure)
setwd("C:\\Users\\Vaibhav\\Desktop\\ADM CA2 Data New\\Hourly Air Pressure")
files <- list.files(pattern="*.csv")
AirPressure <- files %>% map_df(read.csv)
head(AirPressure)
AirPressure <- extract(AirPressure, DATE, into = c("Year", "Month","Date"), "(.{4})( .{2})(.{2})", remove=FALSE)
head(AirPressure)
setwd("C:\\Users\\Vaibhav\\Desktop\\ADM CA2 Data New\\Hourly Air Pressure")
files <- list.files(pattern="*.csv")
AirPressure <- files %>% map_df(read.csv)
head(AirPressure)
out <- strsplit(as.character(AirPressure$DATE),'-')
head(out)
setwd("C:\\Users\\Vaibhav\\Desktop\\ADM CA2 Data New\\Hourly Air Pressure")
files <- list.files(pattern="*.csv")
AirPressure <- files %>% map_df(read.csv)
out <- strsplit(AirPressure$DATE,'-')
head(out)
strsplit(AirPressure$DATE,'-')[1]
strsplit(AirPressure$DATE,'-')[,1]
strsplit(AirPressure$DATE,'-')[[1]]
setwd("C:\\Users\\Vaibhav\\Desktop\\ADM CA2 Data New\\Hourly Air Pressure")
files <- list.files(pattern="*.csv")
AirPressure <- files %>% map_df(read.csv)
df <- transform(AirPressure, DATE = colsplit(DATE, split = "\\-", names = c('a', 'b','c')))
head(df)
AirPressure <- transform(AirPressure, DATE = colsplit(DATE, split = "\\-", names = c('Year', 'Month','Hours')))
head(AirPressure)
AirPressure <- AirPressure[,-3]
head(AirPressure)
AirPressure <- AirPressure[,-3]
head(AirPressure)
AirPressure <- AirPressure[,-c(3)]
head(AirPressure)
AirPressure[ , -which(names(AirPressure) %in% c("Hours"))]
head(AirPressure)
AirPressure[ , -which(names(AirPressure) %in% c("DATE.Hours"))]
head(AirPressure)
names(AirPressure)
View(AirPressure)
dim(AirPressure)
select(AirPressure, DATE,HourlySeaLevelPressure)
library(dplyr)
select(AirPressure, DATE,HourlySeaLevelPressure)
setwd("C:\\Users\\Vaibhav\\Desktop\\ADM CA2 Data New\\Hourly Air Pressure")
files <- list.files(pattern="*.csv")
AirPressure <- files %>% map_df(read.csv)
AirPressure <- transform(AirPressure, DATE = colsplit(DATE, split = "\\-", names = c('Year', 'Month','Hours')))
names(AirPressure)
setwd("C:\\Users\\Vaibhav\\Desktop\\ADM CA2 Data New\\Hourly Air Pressure")
files <- list.files(pattern="*.csv")
AirPressure <- files %>% map_df(read.csv)
separate(AirPressure,DATE,c("year","month"))
setwd("C:\\Users\\Vaibhav\\Desktop\\ADM CA2 Data New\\Hourly Air Pressure")
files <- list.files(pattern="*.csv")
AirPressure <- files %>% map_df(read.csv)
separate(AirPressure,DATE,c("year","month","Date"))
setwd("C:\\Users\\Vaibhav\\Desktop\\ADM CA2 Data New\\Hourly Air Pressure")
files <- list.files(pattern="*.csv")
AirPressure <- files %>% map_df(read.csv)
separate(AirPressure,DATE,c("year","month"))
names(AirPressure)
typeof(AirPressure$HourlySeaLevelPressure)
AirPressure$HourlySeaLevelPressure <- as.numeric(AirPressure$HourlySeaLevelPressure)
typeof(AirPressure$HourlySeaLevelPressure)
head(AirPressure)
#Split the columns
separate(AirPressure,DATE,c("year","month"))
AirPressure <- AirPressure$HourlySeaLevelPressure <- as.numeric(AirPressure$HourlySeaLevelPressure)
head(AirPressure)
setwd("C:\\Users\\Vaibhav\\Desktop\\ADM CA2 Data New\\Hourly Air Pressure")
files <- list.files(pattern="*.csv")
AirPressure <- files %>% map_df(read.csv)
#Split the columns
AirPressure <- separate(AirPressure,DATE,c("year","month"))
AirPressure$HourlySeaLevelPressure <- as.numeric(AirPressure$HourlySeaLevelPressure)
names(AirPressure)
typeof(AirPressure$HourlySeaLevelPressure)
head(AirPressure)
AirPressure[is.na(AirPressure$HourlySeaLevelPressure)] <- mean(na.omit(AirPressure))
(na.omit(AirPressure)
na.omit(AirPressure)
na.omit(AirPressure)
mean(na.omit(AirPressure))
typeof(AirPressure$HourlySeaLevelPressure)
a <- lapply(AirPressure, function(HourlySeaLevelPressure) {
HourlySeaLevelPressure[is.na(HourlySeaLevelPressure)] <- mean(HourlySeaLevelPressure, na.rm = TRUE)
HourlySeaLevelPressure
})
a
AirPressure$HourlySeaLevelPressure <- lapply(AirPressure, function(HourlySeaLevelPressure) {
HourlySeaLevelPressure[is.na(HourlySeaLevelPressure)] <- mean(HourlySeaLevelPressure, na.rm = TRUE)
HourlySeaLevelPressure
})
head(AirPressure)
sum(is.na(AirPressure$HourlySeaLevelPressure))
mean(AirPressure$HourlySeaLevelPressure)
mean(AirPressure$HourlySeaLevelPressure)
typeof(AirPressure$HourlySeaLevelPressure)
AirPressure$HourlySeaLevelPressure <- lapply(AirPressure, function(HourlySeaLevelPressure) {
HourlySeaLevelPressure[is.na(HourlySeaLevelPressure)] <- mean(HourlySeaLevelPressure, na.rm = TRUE)
HourlySeaLevelPressure
})
#reading Sea level pressure
setwd("C:\\Users\\Vaibhav\\Desktop\\ADM CA2 Data New\\Hourly Air Pressure")
files <- list.files(pattern="*.csv")
AirPressure <- files %>% map_df(read.csv)
#Split the columns
AirPressure <- separate(AirPressure,DATE,c("year","month"))
AirPressure$HourlySeaLevelPressure <- as.numeric(AirPressure$HourlySeaLevelPressure)
names(AirPressure)
typeof(AirPressure$HourlySeaLevelPressure)
head(AirPressure)
sum(is.na(AirPressure$HourlySeaLevelPressure))
AirPressure$HourlySeaLevelPressure <- lapply(AirPressure, function(HourlySeaLevelPressure) {
HourlySeaLevelPressure[is.na(HourlySeaLevelPressure)] <- mean(HourlySeaLevelPressure, na.rm = TRUE)
HourlySeaLevelPressure
})
a <- lapply(AirPressure, function(HourlySeaLevelPressure) {
HourlySeaLevelPressure[is.na(HourlySeaLevelPressure)] <- mean(HourlySeaLevelPressure, na.rm = TRUE)
HourlySeaLevelPressure
})
setwd("C:\\Users\\Vaibhav\\Desktop\\ADM CA2 Data New\\Hourly Air Pressure")
files <- list.files(pattern="*.csv")
AirPressure <- files %>% map_df(read.csv)
#Split the columns
AirPressure <- separate(AirPressure,DATE,c("year","month"))
AirPressure$HourlySeaLevelPressure <- as.numeric(AirPressure$HourlySeaLevelPressure)
names(AirPressure)
typeof(AirPressure$HourlySeaLevelPressure)
head(AirPressure)
sum(is.na(AirPressure$HourlySeaLevelPressure))
lapply(AirPressure, function(HourlySeaLevelPressure) {
HourlySeaLevelPressure[is.na(HourlySeaLevelPressure)] <- mean(HourlySeaLevelPressure, na.rm = TRUE)
HourlySeaLevelPressure
})
sum(is.na(AirPressure$HourlySeaLevelPressure))
lapply(AirPressure, function(HourlySeaLevelPressure) {
HourlySeaLevelPressure[is.na(HourlySeaLevelPressure)] <- mean(HourlySeaLevelPressure, na.rm = TRUE)
HourlySeaLevelPressure
})HourlySeaLevelPressure
lapply(AirPressure, function(HourlySeaLevelPressure) {
HourlySeaLevelPressure[is.na(HourlySeaLevelPressure)] <- mean(HourlySeaLevelPressure, na.rm = TRUE)
HourlySeaLevelPressure
}) -> AirPressure$HourlySeaLevelPressure
AirPressure$HourlySeaLevelPressure[is.na(AirPressure$HourlySeaLevelPressure)] <- round(mean(AirPressure$HourlySeaLevelPressure, na.rm = TRUE))
sum(is.na(AirPressure$HourlySeaLevelPressure))
head(AirPressure)
AirPressure$HourlySeaLevelPressure <- AirPressure$HourlySeaLevelPressure * 3386
head(AirPressure)
dim(AirPressure)
write.csv(AirPressure,"Airpressure.csv")
names(AirPressure)
write.csv(Temperature,"Temperature.csv")
